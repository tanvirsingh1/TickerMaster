# Generated by Django 4.1.7 on 2023-03-08 02:46

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import ticketing.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('venue_management', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Eventgoer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(max_length=30, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=30, verbose_name='Last Name')),
                ('email', models.EmailField(max_length=40, unique=True, verbose_name='Email')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Is Staff')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Is Superuser')),
                ('is_reseller', models.BooleanField(verbose_name='Reseller Account')),
            ],
            options={
                'verbose_name': 'Eventgoer',
                'verbose_name_plural': 'Eventgoers',
            },
            managers=[
                ('objects', ticketing.manager.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('concert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='venue_management.concert', verbose_name='Concert')),
                ('seat_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='venue_management.seattype', verbose_name='Seat Type')),
            ],
        ),
        migrations.CreateModel(
            name='SupportTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_number', models.CharField(max_length=16, verbose_name='Credit Card Number')),
                ('cvv', models.CharField(max_length=4, verbose_name='CVV')),
                ('exp_month', models.CharField(max_length=2, verbose_name='Exipration month')),
                ('exp_year', models.CharField(max_length=4, verbose_name='Exipration year')),
                ('holder_name', models.CharField(max_length=100, verbose_name='Card Holder Name')),
                ('order_date', models.DateField(default=datetime.date.today)),
                ('total', models.FloatField(validators=[django.core.validators.MinValueValidator(limit_value=0), django.core.validators.MaxValueValidator(limit_value=100000)], verbose_name='Price')),
                ('purchaser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='ticketing.eventgoer', verbose_name='Purchaser')),
                ('tickets', models.ManyToManyField(related_name='orders', to='ticketing.ticket', verbose_name='Tickets')),
            ],
        ),
    ]
