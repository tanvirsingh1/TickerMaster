# Generated by Django 4.1.7 on 2023-03-06 01:16

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import venue_management.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Concert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=60)),
                ('artist_name', models.CharField(max_length=100)),
                ('concert_date', models.DateTimeField()),
                ('min_age', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(limit_value=1), django.core.validators.MaxValueValidator(limit_value=100)], verbose_name='Minimum Age')),
                ('price', models.FloatField(default=0, null=True, verbose_name='Ticket Price')),
                ('concert_image', models.ImageField(blank=True, null=True, upload_to='')),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street_num', models.IntegerField(validators=[django.core.validators.MinValueValidator(limit_value=1), django.core.validators.MaxValueValidator(limit_value=100000)])),
                ('street_name', models.CharField(max_length=200)),
                ('city', models.CharField(max_length=20)),
                ('province', models.CharField(choices=[('ON', 'Ontario'), ('QC', 'Quebec'), ('NS', 'Nova Scotia'), ('NB', 'New Brunswick'), ('MB', 'Manitoba'), ('BC', 'British Columbia'), ('PE', 'Prince Edward Island'), ('SK', 'Saskatchewan'), ('AB', 'Alberta'), ('NL', 'Newfoundland and Labrador'), ('NT', 'Northwest Territories'), ('YT', 'Yukon Territories'), ('NU', 'Nunavut')], max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='SeatType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Seat Type')),
                ('description', models.CharField(max_length=255, verbose_name='Seat Description')),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(limit_value=1), django.core.validators.MaxValueValidator(limit_value=1000000)], verbose_name='Number of Seats')),
            ],
        ),
        migrations.CreateModel(
            name='VenueManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(max_length=30, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=30, verbose_name='Last Name')),
                ('email', models.EmailField(max_length=40, unique=True, verbose_name='Email')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Is Staff')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Is Superuser')),
            ],
            options={
                'verbose_name': 'Venue Manager',
                'verbose_name_plural': 'Venue Managers',
            },
            managers=[
                ('objects', venue_management.manager.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Name')),
                ('image', models.URLField(max_length=255, verbose_name='Image URL')),
                ('website', models.URLField(max_length=255, verbose_name='Website')),
                ('concerts', models.ManyToManyField(to='venue_management.concert', verbose_name='Concerts')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='venue_management.location', verbose_name='Location')),
                ('managers', models.ManyToManyField(to='venue_management.venuemanager', verbose_name='Managers')),
                ('seat_types', models.ManyToManyField(to='venue_management.seattype', verbose_name='Seat Types')),
            ],
        ),
        migrations.CreateModel(
            name='PromoCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9]*$', 'Only letters and numbers are allowed.')])),
                ('discount', models.DecimalField(decimal_places=2, max_digits=5)),
                ('expiration_date', models.DateField()),
                ('generated_time', models.DateTimeField(auto_now_add=True)),
                ('venue_manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='venue_management.venuemanager')),
            ],
        ),
    ]
